generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  email     String   @unique
  name      String
  lastName  String
  username  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String
  type      Role     @default(USER)
  status    Status   @default(ACTIVE)

  UserProgram           UserProgram[]
  UserProgramTestResult UserProgramTestResult[]
}

model Program {
  id          Int    @id @default(autoincrement())
  uuid        String @unique
  description String
  imageUrl    String

  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(ACTIVE)

  UserProgram           UserProgram[]
  ProgramTest           ProgramTest[]
  UserProgramTestResult UserProgramTestResult[]
}

model Test {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      Status   @default(ACTIVE)
  level       Level    @default(BEGINNER)

  ProgramTest           ProgramTest[]
  TestQuestion          TestQuestion[]
  UserProgramTestResult UserProgramTestResult[]
}

model Answer {
  id             Int              @id @default(autoincrement())
  text           String
  QuestionAnswer QuestionAnswer[]
  Question       Question[]
}

model Question {
  id                Int              @id @default(autoincrement())
  text              String
  correct_answer    Answer           @relation(fields: [correct_answer_id], references: [id])
  correct_answer_id Int
  TestQuestion      TestQuestion[]
  QuestionAnswer    QuestionAnswer[]
}

model UserProgram {
  user       User    @relation(fields: [user_id], references: [id])
  user_id    Int
  program    Program @relation(fields: [program_id], references: [id])
  program_id Int

  @@id([user_id, program_id])
}

model ProgramTest {
  program    Program @relation(fields: [program_id], references: [id])
  program_id Int
  test       Test    @relation(fields: [test_id], references: [id])
  test_id    Int

  @@id([program_id, test_id])
}

model TestQuestion {
  test        Test     @relation(fields: [test_id], references: [id])
  test_id     Int
  question    Question @relation(fields: [question_id], references: [id])
  question_id Int

  @@id([test_id, question_id])
}

model QuestionAnswer {
  question    Question @relation(fields: [question_id], references: [id])
  question_id Int
  answer      Answer   @relation(fields: [answer_id], references: [id])
  answer_id   Int

  @@id([question_id, answer_id])
}

model UserProgramTestResult {
  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  program    Program @relation(fields: [program_id], references: [id])
  program_id Int

  test    Test @relation(fields: [test_id], references: [id])
  test_id Int

  score Int

  @@id([user_id, program_id, test_id])
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  DELETED
}

enum Level {
  BEGINNER
  MEDIUM
  ADVANCED
}
